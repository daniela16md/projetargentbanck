swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /users/{id}/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      summary: Get all accounts
      description: API to retrieve all the user's accounts
      parameters:
        - in: path
          name: id
          description: The ID of the user
          required: true
          type: string
      responses:
        '200':
          description: List of user accounts
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'
        '401':
          description: Unauthorized (missing or invalid token)
        '403':
          description: Forbidden
        '404':
          description: User does not exist
        '500':
          description: Internal Server Error
  /accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      summary: Get all transactions for a specific account
      description: API to retrieve all transactions for a specific account
      parameters:
        - in: path
          name: accountId
          description: The ID of the account
          required: true
          type: string
        - in: query
          name: year
          description: The year of the transactions
          required: true
          type: string
        - in: query
          name: month
          description: The month of the transactions
          required: true
          type: string
      responses:
        '200':
          description: List of transactions for the given account
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized (missing or invalid token)
        '403':
          description: Forbidden
        '404':
          description: Account not found
        '500':
          description: Internal Server Error
  /transactions/{transactionId}:
    put:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      summary: Modify transaction category and/or note
      description: API to modify the category and/or note of a specific transaction
      parameters:
        - in: path
          name: transactionId
          description: The ID of the transaction
          required: true
          type: string
        - in: body
          name: body
          description: Data to update the category and/or note of the transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid fields or missing parameters
        '401':
          description: Unauthorized (missing or invalid token)
        '403':
          description: Forbidden
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name
      userName:
        type: string
        description: User public name
  Login:
    type: object
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
        description: Status code of the response
      message:
        type: string
        description: Message in the response
      body:
        type: object
        properties:
          id:
            type: string
            description: User ID
          email:
            type: string
            description: User email
  LoginResponse:
    type: object
    properties:
      token:
        type: string
        description: Authentication token
  UserProfile:
    type: object
    properties:
      userName:
        type: string
        description: User's public name
  Account:
    type: object
    properties:
      accountId:
        type: string
        description: The unique identifier for the account
      title:
        type: string
        description: Account title
      balance:
        type: string
        description: Account balance
  Transaction:
    type: object
    properties:
      transactionID:
        type: string
        description: Unique identifier for the transaction
      date:
        type: string
        format: date-time
        description: Date and time when the transaction occurred
      description:
        type: string
        description: Detailed description of the transaction
      amount:
        type: number
        format: float
        description: The amount of money involved in the transaction
      balance:
        type: number
        format: double
        description: Available balance after the transaction is processed
      transactionType:
        type: string
        description: Type of transaction (e.g., credit, debit, electronic)
      category:
        type: string
        description: Category of the transaction (e.g., groceries, rent, food)
      note:
        type: string
        description: A note attached by the user regarding the transaction (optional)
  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
        description: New category for the transaction (optional)
      note:
        type: string
        description: New note for the transaction (optional)
